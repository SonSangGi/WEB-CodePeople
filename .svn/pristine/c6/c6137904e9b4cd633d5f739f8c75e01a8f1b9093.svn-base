<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.jhta.cope.dao.QnaDao">
	
	<!-- 하위 객체들이 전부 들어있는 QNA -->
	<resultMap type="Qna" id="getQnaByNoResultMap">
		<id column="QNA_NO" property="no"/>
		<result column="QNA_TITLE" property="title"/>
		<result column="QNA_CONTENTS" property="contents"/>
		<result column="QNA_CREATE_DATE" property="createDate"/>
		<association column="QNA_WRITER" property="writer" javaType="User" select="com.jhta.cope.dao.UserDao.getUserByNo"/>
		<collection property="answers" column="QNA_NO" javaType="java.util.ArrayList" ofType="QnaAnswer" select="getAnswerByNo"/>
	</resultMap>
	<!-- 하위 객체가 전부 들어있는 Answer -->
	<resultMap type="QnaAnswer" id="getAnswerByNoResultMap">
		<id column="ANSWER_NO" property="no"/>
		<result column="ANSWER_CONTENTS" property="contents"/>
		<result column="ANSWER_CREATE_DATE" property="createDate"/>
		<result column="QNA_NO" property="qnaNo"/>
		<association column="ANSWER_WRITER" property="writer" javaType="User" select="com.jhta.cope.dao.UserDao.getUserByNo"/>
	</resultMap>
	<select id="getAnswerByNo" parameterType="int" resultMap="getAnswerByNoResultMap">
	select 
	    ANSWER_NO,
	    ANSWER_WRITER,
	    ANSWER_CONTENTS,
	    ANSWER_CREATE_DATE,
	    QNA_NO
	from
	    QNA_ANSWER
	where
		QNA_NO = #{value}
	</select>
	
	<select id="getQnaByNo" parameterType="int" resultMap="getQnaByNoResultMap">
		select 
		    QNA_NO,
		    QNA_TITLE,
		    QNA_WRITER,
		    QNA_CONTENTS,
		    QNA_VIEWS,
		    QNA_CREATE_DATE
		from
	    	QNA
	    where
	    	QNA_NO = #{value}
	</select>
	
	<select id="getAllQnas" resultType="Qna">
		select 
		    QNA_NO as no,
		    QNA_TITLE as title,
		    QNA_WRITER as writer,
		    QNA_CONTENTS as contents,
		    QNA_CREATE_DATE as createDate
		from
	    	QNA
	</select>
	
	<select id="getAllQnasByCriteria" parameterType="Criteria" resultMap="getQnaByNoResultMap">
		select 
			QNA_NO,
		    QNA_TITLE,
		    QNA_WRITER,
		    QNA_CONTENTS,
		    QNA_CREATE_DATE,
		    QNA_VIEWS
		from (
		        select 
		                ROW_NUMBER() over (order by qna_create_date) rn,
		                QNA_NO,
		                QNA_TITLE,
		                QNA_WRITER,
		                QNA_CONTENTS,
		                QNA_CREATE_DATE,
		                QNA_VIEWS
		        from QNA
		        <where>
		        	<if test="searchType == 'all' and keyword != null">
		        		LOWER(QNA_TITLE) like '%' || #{keyword} || '%' or
		        		LOWER(QNA_WRITER) like '%' || #{keyword} || '%' or
		        		LOWER(QNA_CONTENTS) like '%' || #{keyword} || '%'
		        	</if>
		        	<if test="searchType == 'title' and keyword != null">
		        		LOWER(QNA_TITLE) like '%' || #{keyword} || '%'
		        	</if>
		        	<if test="searchType == 'writer' and keyword != null">
		        		LOWER(QNA_WRITER) like '%' || #{keyword} || '%'
		        	</if>
		        	<if test="searchType == 'contents' and keyword != null">
		        		LOWER(QNA_CONTENTS) like '%' || #{keyword} || '%'
		        	</if>
		        </where>
		        )
		    where rn &gt;= #{beginIndex}
		    and rn &lt;= #{endIndex}
	</select>
	
	<select id="getQnaCount" resultType="int">
		select 
			count(*)
		from
	    	QNA
	</select>
	
		<select id="getAnswerCount" parameterType="int" resultType="int">
		select 
			count(*)
		from
	    	QNA_ANSWERS
	    where QNA_NO = #{value}
	</select>
	
	<insert id="insertQna" parameterType="Qna">
	<selectKey keyProperty="no" resultType="int" order="BEFORE">
		select SEQ_qna_qna_no.nextval from dual
	</selectKey>
		insert into QNA(
				QNA_NO,
				QNA_TITLE,
				QNA_WRITER,
				QNA_CONTENTS,
				QNA_CREATE_DATE,
				QNA_VIEWS)
		values (#{no},#{title},#{writer.no},#{contents},sysdate,0)
	</insert>
</mapper>